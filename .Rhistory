find.package("devtools")
find.package("devtools")
install.package("devtools")
install.packagge("devtools")
install.package
install
library(devtools)
library(devtools)
find.package(devtools)
find.package("devtools")
find_rtools()
install.packages("kernSmooth")
yes
install.packages("kernsmooth")
y
install.packagtes("kernSmooth")
install.packages("kernSmooth")
install.packages("KernSmooth")
library("Kernsmooth")
library(Kernsmooth)
library(KernSmooth)
packages.install("knitr")
install.packages("knitr")
```{r fig.height = 10 fig.width = 10}
2*pi*3500/60
2*pi*3500
200*21991.15
200 * 3500*2pi
200 * 3500*2*pi
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
```{r echo = TRUE}
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
```
## What is mean total number of steps taken per day?
The mean total steps by day is 10767 and the median is 10766. See below for analysis.
```{r echo = TRUE}
nonNAdata <- data[!is.na(data$steps), ] ## Takes out the NA values
templist <- split(nonNAdata$steps, nonNAdata$date) ## groups steps by day
stepsbyday <- simplify2array(lapply(templist, sum, simplify = TRUE)) ## find total number of steps by day
hist(stepsbyday, main = "histogram of steps by day", xlab = "steps by day") ## make a histogram
mean(stepsbyday) ## find the mean
median(stepsbyday) ## find the median
```
## What is the average daily activity pattern?
The interval containing the max steps taken is the 835th interval. See below for analysis.
```{r echo = TRUE}
templist2 <- split(nonNAdata$steps, nonNAdata$interval) ## groups steps by intervals
avgStepsPerInterval <- simplify2array(lapply(templist2, mean, simplify = TRUE))## find the mean across all days for each interval
##Plotting the graph
plot(unique(nonNAdata$interval), avgStepsPerInterval, type = "l", xlab = "5 min intervals", ylab = "mean steps taken across all days for each interval")
names(avgStepsPerInterval[avgStepsPerInterval == max(avgStepsPerInterval)]) ## finding the interval containing the most steps taken
```
## Imputing missing values
The total number of missing values is 2304. The missing values will be imputed
with the mean interval values across all days. The new mean is 10767.19. The new median is 10767.19. See below for analysis. The new mean and median differs from
the original slightly. THe effect of imputing the missing values is raising
the mean of daily total steps slightly. See below for analysis.
```{r echo = TRUE}
length(data[is.na(data$steps), "steps"]) ## finding the total number of missing values
stepswithNAfilled <- replace(data$steps, is.na(data$steps), avgStepsPerInterval) ## repalces NA's with mean steps across all days for each interval
newdata <- data.frame(stepswithNAfilled, data$date, data$interval) ##constructs a new data set with NA's replaced with interval mean steps
templist3 <- split(newdata$stepswithNAfilled, newdata$data.date) ## group steps by date
totalstepsperdaywithna <- simplify2array(lapply(templist3, sum, simply = TRUE)) ## calculate steps per day
hist(totalstepsperdaywithna, main = "steps per day with filled na", xlab = "steps per day with filled na") ## make the histogram
mean(totalstepsperdaywithna) ## mean of steps per day with Na imputed
median(totalstepsperdaywithna) ## median of steps per day with NA imputed
```
## Are there differences in activity patterns between weekdays and weekends?
```{r echo = TRUE}
x <- weekdays(newdata$data.date) ## get the weekday values of dates
newdata$newcol <- sapply(x, function(y){if(y == "Sunday" | y == "Saturday"){y <- "weekend"}else{y <- "weekday"}}) ## creating a new column of factor groups consisting of weekend or weekdays
propercol <- newdata[1:length(newdata[newdata$newcol == "weekday", "stepswithNAfilled"]), "newcol"] ## subset the factgroup to the right length for weekdays
```
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
## What is mean total number of steps taken per day?
The mean total steps by day is 10767 and the median is 10766. See below for analysis.
nonNAdata <- data[!is.na(data$steps), ] ## Takes out the NA values
templist <- split(nonNAdata$steps, nonNAdata$date) ## groups steps by day
stepsbyday <- simplify2array(lapply(templist, sum, simplify = TRUE)) ## find total number of steps by day
hist(stepsbyday, main = "histogram of steps by day", xlab = "steps by day") ## make a histogram
mean(stepsbyday) ## find the mean
median(stepsbyday) ## find the median
## What is the average daily activity pattern?
The interval containing the max steps taken is the 835th interval. See below for analysis.
templist2 <- split(nonNAdata$steps, nonNAdata$interval) ## groups steps by intervals
avgStepsPerInterval <- simplify2array(lapply(templist2, mean, simplify = TRUE))## find the mean across all days for each interval
##Plotting the graph
plot(unique(nonNAdata$interval), avgStepsPerInterval, type = "l", xlab = "5 min intervals", ylab = "mean steps taken across all days for each interval")
names(avgStepsPerInterval[avgStepsPerInterval == max(avgStepsPerInterval)]) ## finding the interval containing the most steps taken
## Imputing missing values
The total number of missing values is 2304. The missing values will be imputed
with the mean interval values across all days. The new mean is 10767.19. The new median is 10767.19. See below for analysis. The new mean and median differs from
the original slightly. THe effect of imputing the missing values is raising
the mean of daily total steps slightly. See below for analysis.
length(data[is.na(data$steps), "steps"]) ## finding the total number of missing values
stepswithNAfilled <- replace(data$steps, is.na(data$steps), avgStepsPerInterval) ## repalces NA's with mean steps across all days for each interval
newdata <- data.frame(stepswithNAfilled, data$date, data$interval) ##constructs a new data set with NA's replaced with interval mean steps
templist3 <- split(newdata$stepswithNAfilled, newdata$data.date) ## group steps by date
totalstepsperdaywithna <- simplify2array(lapply(templist3, sum, simply = TRUE)) ## calculate steps per day
hist(totalstepsperdaywithna, main = "steps per day with filled na", xlab = "steps per day with filled na") ## make the histogram
mean(totalstepsperdaywithna) ## mean of steps per day with Na imputed
median(totalstepsperdaywithna) ## median of steps per day with NA imputed
## Are there differences in activity patterns between weekdays and weekends?
x <- weekdays(newdata$data.date) ## get the weekday values of dates
newdata$newcol <- sapply(x, function(y){if(y == "Sunday" | y == "Saturday"){y <- "weekend"}else{y <- "weekday"}}) ## creating a new column of factor groups consisting of weekend or weekdays
propercol <- newdata[1:length(newdata[newdata$newcol == "weekday", "stepswithNAfilled"]), "newcol"] ## subset the factgroup to the right length for weekdays
getwd()
setwd("c:/Users/Europa/Documents/GitHub/RepData_PeerAssessment1")
getwd()
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
data <- read.csv("activity.csv", colClasses = c("numeric", "Date", "numeric"))
## What is mean total number of steps taken per day?
The mean total steps by day is 10767 and the median is 10766. See below for analysis.
nonNAdata <- data[!is.na(data$steps), ] ## Takes out the NA values
templist <- split(nonNAdata$steps, nonNAdata$date) ## groups steps by day
stepsbyday <- simplify2array(lapply(templist, sum, simplify = TRUE)) ## find total number of steps by day
hist(stepsbyday, main = "histogram of steps by day", xlab = "steps by day") ## make a histogram
mean(stepsbyday) ## find the mean
median(stepsbyday) ## find the median
## What is the average daily activity pattern?
The interval containing the max steps taken is the 835th interval. See below for analysis.
templist2 <- split(nonNAdata$steps, nonNAdata$interval) ## groups steps by intervals
avgStepsPerInterval <- simplify2array(lapply(templist2, mean, simplify = TRUE))## find the mean across all days for each interval
##Plotting the graph
plot(unique(nonNAdata$interval), avgStepsPerInterval, type = "l", xlab = "5 min intervals", ylab = "mean steps taken across all days for each interval")
names(avgStepsPerInterval[avgStepsPerInterval == max(avgStepsPerInterval)]) ## finding the interval containing the most steps taken
## Imputing missing values
The total number of missing values is 2304. The missing values will be imputed
with the mean interval values across all days. The new mean is 10767.19. The new median is 10767.19. See below for analysis. The new mean and median differs from
the original slightly. THe effect of imputing the missing values is raising
the mean of daily total steps slightly. See below for analysis.
length(data[is.na(data$steps), "steps"]) ## finding the total number of missing values
stepswithNAfilled <- replace(data$steps, is.na(data$steps), avgStepsPerInterval) ## repalces NA's with mean steps across all days for each interval
newdata <- data.frame(stepswithNAfilled, data$date, data$interval) ##constructs a new data set with NA's replaced with interval mean steps
templist3 <- split(newdata$stepswithNAfilled, newdata$data.date) ## group steps by date
totalstepsperdaywithna <- simplify2array(lapply(templist3, sum, simply = TRUE)) ## calculate steps per day
hist(totalstepsperdaywithna, main = "steps per day with filled na", xlab = "steps per day with filled na") ## make the histogram
mean(totalstepsperdaywithna) ## mean of steps per day with Na imputed
median(totalstepsperdaywithna) ## median of steps per day with NA imputed
## Are there differences in activity patterns between weekdays and weekends?
x <- weekdays(newdata$data.date) ## get the weekday values of dates
newdata$newcol <- sapply(x, function(y){if(y == "Sunday" | y == "Saturday"){y <- "weekend"}else{y <- "weekday"}}) ## creating a new column of factor groups consisting of weekend or weekdays
propercol <- newdata[1:length(newdata[newdata$newcol == "weekday", "stepswithNAfilled"]), "newcol"] ## subset the factgroup to the right length for weekdays
length(propercol)
legtnH(newdata[newdata$newcol =="weekday", "stepswithNAfilled"])
length(newdata[newdata$newcol =="weekday", "stepswithNAfilled"])
weekdaydata <- data.frame(newdata[newdata$newcol =="weekday", "stepswithNAfilled"], propercol)
head(weekdaydata)
unique(weekdaydata$propercol)
names(weekdaydata$propercol) <- c("steps", "propercol")
head(weekdaydata)
names(weekdaydata) <- c("steps", "propercol")
head(weekdaydata)
weekdaydata[weekdaydata$propercol != "weekday", "steps"]
unique(propercol)
head(newdata)
newdata[newdata$newcol =="weekday", newdata$stepswithNAfilled, newdata$data.interval]
newdata[newdata$newcol =="weekday", "stepswithNAfilled", "data.date"]
newdata[newdata[, "newcol"] =="weekday", "stepswithNAfilled", "data.date"]
newdata[newdata[, "newcol"] =="weekday", c("stepswithNAfilled", "data.date")]
weekdaydata <- newdata[newdata[, "newcol"] =="weekday", c("stepswithNAfilled", "data.date", "newcol")]
head(weekdaydata)
unique(weekdaydata$newcol)
temporary1 <- split(weekdaydata$stepswithNAfilled, weekdaydata$data.date)
head(temporary1)
head(weekdaydata)
weekdaydata <- newdata[newdata[, "newcol"] =="weekday", c("stepswithNAfilled", "data.date", "data.interval")]
head(weekdaydata)
split(weekdaydata$stepswithNAfilled, weekdaydata$data.interval)
temporary1 <- split(weekdaydata$stepswithNAfilled, weekdaydata$data.interval)
class(temporary1)
meanstepsweekdays <- sapply(temporary1, mean)
plot(meanstepsweekdays, unique(newdata$date.interval))
weekenddata <- newdata[newdata[, "newcol"] =="weekend", c("stepswithNAfilled", "data.date", "data.interval")]
nrow(weekenddata)
temporary2 <- split(weekenddata$stepswithNAfilled, weekenddata$data.interval)
meanstepsweekends <- sapply(temporary2, mean)
xvalues <- unique(newdata$date.intervals)
par(mfrow = c(2, 1))
plot(meanstepsweekends, xvalues, main = "weekends", xlabl = "", ylabl = "steps")
par(mfrow = c(2, 1))
head(newdata)
par(mfrow = c(2, 1))
plot(meanstepsweekends, unique(weekenddata$data.interval), main = "weekends", xlabl = "", ylabl = "steps")
plot(meanstepsweekdays, unique(newdata$date.interval))
warnings()
plot(meanstepsweekends, unique(weekenddata$data.interval), main = "weekends", xlab = "", ylab = "steps")
plot(meanstepsweekends, unique(weekenddata$data.interval))
par(mfrow = c(2, 1))
plot(unique(weekenddata$data.interval), meanstepweekends)
plot(unique(weekenddata$data.interval), meanstepweekends))
plot(unique(weekenddata$data.interval), meanstepsweekends)
plot(unique(weekenddata$data.interval), meanstepsweekends)
plot(unique(weekenddata$data.interval), meanstepsweekends, xlab = "intervals")
plot(unique(weekdaysdata$data.interval), meanstepsweekdays, xlab = "intervals")
plot(unique(weekdaydata$data.interval), meanstepsweekdays, xlab = "intervals")
par(mfrow = c(2, 1))
plot(unique(weekdaysdata$data.interval), meanstepsweekdays, xlab = "intervals")
plot(unique(weekenddata$data.interval), meanstepsweekends, xlab = "intervals")
plot(unique(weekdaydata$data.interval), meanstepsweekdays, xlab = "intervals")
par(mfrow = c(2, 1))
plot(unique(weekenddata$data.interval), meanstepsweekends)
plot(unique(weekdaydata$data.interval), meanstepsweekdays)
plot(unique(weekenddata$data.interval), meanstepsweekends)
plot(unique(weekdaydata$data.interval), meanstepsweekdays)
par(mfrow)
par
?par
par("mfrow")
par(mfrow = c(2, 1))
par("mfrow")
plot(unique(weekenddata$data.interval), meanstepsweekends)
plot(unique(weekdaydata$data.interval), meanstepsweekdays)
for analysis.
